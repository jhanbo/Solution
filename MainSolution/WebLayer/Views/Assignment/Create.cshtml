@model ITGateWorkDesk.Web.Mvc.Models.AssignmentModel
@{
    ViewBag.Title = "Create";
}
<h2>
    Create</h2>
@section HeaderSection{
    <script src="../../Scripts/AssignmentCreateScripts.js" type="text/javascript"></script>
    <script src="../../Scripts/jquery-ui-1.8.23.min.js" type="text/javascript"></script>
    <link href="../../Content/themes/base/jquery.ui.all.css" rel="stylesheet" type="text/css" />
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>AssignmentModel</legend>
        <div class="editor-label">
            @Html.LabelFor(model => model.AssignedDate)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.AssignedDate, new { @class = "datefield" })
            @Html.ValidationMessageFor(model => model.AssignedDate)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.ReceivedDate)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.ReceivedDate, new { @class = "datefield" })
            @Html.ValidationMessageFor(model => model.ReceivedDate)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.DueDate)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.DueDate, new { @class = "datefield" })
            @Html.ValidationMessageFor(model => model.DueDate)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.RemindedDate)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.RemindedDate, new { @class = "datefield" })
            @Html.ValidationMessageFor(model => model.RemindedDate)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Actions)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Actions)
            @Html.ValidationMessageFor(model => model.Actions)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.State)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.State, new SelectList(new[]
                                                                                    {
                                                                                        new {ID = "1", Name = "Pending"},
                                                                                    },
                                                                                "ID", "Name", 1))
            @Html.ValidationMessageFor(model => model.State)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Orgunit)
        </div>
        <div class="editor-field">
            @Html.HiddenFor(model => model.Orgunit)
            <input type="text" id="OrgunitLabel" />
            <input type="submit" value="..." id="selectOrgunitBtn" class="modal-dialog-opener" /><br />
            @Html.ValidationMessageFor(model => model.Orgunit)
        </div>
        <div class="editor-field">
            <fieldset>
                <legend>@Html.LabelFor(model => model.AssignmentAttachments)</legend>
                <div id="attachmentsParitalDiv">
                    @Html.Partial("Upload", 1)
                </div>
            </fieldset>
        </div>
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
    
    ViewData["toUpdateField"] = "Orgunit"; ViewData["dialogID"] = "SelectOrgunitDialogID"; ViewData["allowMultipleSelection"] = false;
    @Html.Partial("OrgunitSelectorPartial", (IEnumerable<ITGateWorkDesk.Web.Mvc.Models.OrgunitModel>)ViewBag.Orgunits, ViewData)

}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
